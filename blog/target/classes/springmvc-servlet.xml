<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:component-scan base-package="com.jason.blog.controller"/>
    <mvc:annotation-driven validator="beansValidator">
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
        <mvc:argument-resolvers>
            <bean class="org.springframework.mobile.device.DeviceWebArgumentResolver" />
            <bean class="org.springframework.mobile.device.site.SitePreferenceWebArgumentResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!--配置视图解析器-->
    <bean class="org.springframework.mobile.device.view.LiteDeviceDelegatingViewResolver">
        <constructor-arg>
            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="prefix" value="/WEB-INF/jsp/"/>
                <property name="suffix" value=".jsp"/>
            </bean>
        </constructor-arg>
        <property name="enableFallback" value="true"/>
        <property name="mobilePrefix" value="mobile/"/>
        <property name="tabletPrefix" value="tablet/"/>
    </bean>

    <!--JSR303验证切面-->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
    <bean id="beansValidator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:ValidatorMessages"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="jsrValidationAdvice" class="com.jason.blog.common.JSRValidationAdvice"/>
    <aop:config>
        <aop:pointcut id="jsrValidate" expression="execution(public * com.jason.blog.controller.*.*(..))"/>
        <aop:aspect id="jsrValidationAspect" ref="jsrValidationAdvice">
            <aop:around method="aroundMethod" pointcut-ref="jsrValidate"/>
        </aop:aspect>
    </aop:config>
    <mvc:default-servlet-handler/>

    <!-- 配置拦截器 -->
    <mvc:interceptors>
        <!--<bean class="com.jason.blog.common.interceptor.LoginInterceptor"/>-->
        <!-- On pre-handle, resolve the device that originated the web request -->
        <bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor" />
        <!-- On pre-handle, manage the user's site preference (declare after DeviceResolverHandlerInterceptor) -->
        <bean class="org.springframework.mobile.device.site.SitePreferenceHandlerInterceptor" />
        <!-- <bean class="org.springframework.mobile.device.switcher.SiteSwitcherHandlerInterceptor" factory-method="mDot">
            <constructor-arg index="0" type="java.lang.String" value=""/>
            <constructor-arg index="1" type="java.lang.Boolean" value="true"/>
        </bean>-->
    </mvc:interceptors>
    <!--<aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>-->
</beans>